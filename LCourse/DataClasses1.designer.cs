#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace LCourse
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insertboard(board instance);
    partial void Updateboard(board instance);
    partial void Deleteboard(board instance);
    partial void Insertuser_msg(user_msg instance);
    partial void Updateuser_msg(user_msg instance);
    partial void Deleteuser_msg(user_msg instance);
    partial void Insertchat_logon(chat_logon instance);
    partial void Updatechat_logon(chat_logon instance);
    partial void Deletechat_logon(chat_logon instance);
    partial void Insertchat_msg(chat_msg instance);
    partial void Updatechat_msg(chat_msg instance);
    partial void Deletechat_msg(chat_msg instance);
    partial void Insertclass(@class instance);
    partial void Updateclass(@class instance);
    partial void Deleteclass(@class instance);
    partial void Insertcoursework(coursework instance);
    partial void Updatecoursework(coursework instance);
    partial void Deletecoursework(coursework instance);
    partial void Insertcoursework_submission(coursework_submission instance);
    partial void Updatecoursework_submission(coursework_submission instance);
    partial void Deletecoursework_submission(coursework_submission instance);
    partial void Insertfav(fav instance);
    partial void Updatefav(fav instance);
    partial void Deletefav(fav instance);
    partial void Insertmodule_article(module_article instance);
    partial void Updatemodule_article(module_article instance);
    partial void Deletemodule_article(module_article instance);
    partial void Insertmodule_deploy(module_deploy instance);
    partial void Updatemodule_deploy(module_deploy instance);
    partial void Deletemodule_deploy(module_deploy instance);
    partial void Insertmodule_location(module_location instance);
    partial void Updatemodule_location(module_location instance);
    partial void Deletemodule_location(module_location instance);
    partial void Insertmodule_spec(module_spec instance);
    partial void Updatemodule_spec(module_spec instance);
    partial void Deletemodule_spec(module_spec instance);
    partial void Insertmsg_error(msg_error instance);
    partial void Updatemsg_error(msg_error instance);
    partial void Deletemsg_error(msg_error instance);
    partial void Insertmsg_mails(msg_mails instance);
    partial void Updatemsg_mails(msg_mails instance);
    partial void Deletemsg_mails(msg_mails instance);
    partial void Insertpost(post instance);
    partial void Updatepost(post instance);
    partial void Deletepost(post instance);
    partial void Insertreply(reply instance);
    partial void Updatereply(reply instance);
    partial void Deletereply(reply instance);
    partial void Insertstatics_item(statics_item instance);
    partial void Updatestatics_item(statics_item instance);
    partial void Deletestatics_item(statics_item instance);
    partial void Insertstatics_visit(statics_visit instance);
    partial void Updatestatics_visit(statics_visit instance);
    partial void Deletestatics_visit(statics_visit instance);
    partial void Insertstdprof(stdprof instance);
    partial void Updatestdprof(stdprof instance);
    partial void Deletestdprof(stdprof instance);
    partial void Inserttest(test instance);
    partial void Updatetest(test instance);
    partial void Deletetest(test instance);
    partial void Inserttest_sub(test_sub instance);
    partial void Updatetest_sub(test_sub instance);
    partial void Deletetest_sub(test_sub instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DatabaseConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<board> board
		{
			get
			{
				return this.GetTable<board>();
			}
		}
		
		public System.Data.Linq.Table<user_msg> user_msg
		{
			get
			{
				return this.GetTable<user_msg>();
			}
		}
		
		public System.Data.Linq.Table<chat_logon> chat_logon
		{
			get
			{
				return this.GetTable<chat_logon>();
			}
		}
		
		public System.Data.Linq.Table<chat_msg> chat_msg
		{
			get
			{
				return this.GetTable<chat_msg>();
			}
		}
		
		public System.Data.Linq.Table<@class> @class
		{
			get
			{
				return this.GetTable<@class>();
			}
		}
		
		public System.Data.Linq.Table<coursework> coursework
		{
			get
			{
				return this.GetTable<coursework>();
			}
		}
		
		public System.Data.Linq.Table<coursework_submission> coursework_submission
		{
			get
			{
				return this.GetTable<coursework_submission>();
			}
		}
		
		public System.Data.Linq.Table<fav> fav
		{
			get
			{
				return this.GetTable<fav>();
			}
		}
		
		public System.Data.Linq.Table<module_article> module_article
		{
			get
			{
				return this.GetTable<module_article>();
			}
		}
		
		public System.Data.Linq.Table<module_deploy> module_deploy
		{
			get
			{
				return this.GetTable<module_deploy>();
			}
		}
		
		public System.Data.Linq.Table<module_location> module_location
		{
			get
			{
				return this.GetTable<module_location>();
			}
		}
		
		public System.Data.Linq.Table<module_spec> module_spec
		{
			get
			{
				return this.GetTable<module_spec>();
			}
		}
		
		public System.Data.Linq.Table<msg_error> msg_error
		{
			get
			{
				return this.GetTable<msg_error>();
			}
		}
		
		public System.Data.Linq.Table<msg_mails> msg_mails
		{
			get
			{
				return this.GetTable<msg_mails>();
			}
		}
		
		public System.Data.Linq.Table<post> post
		{
			get
			{
				return this.GetTable<post>();
			}
		}
		
		public System.Data.Linq.Table<reply> reply
		{
			get
			{
				return this.GetTable<reply>();
			}
		}
		
		public System.Data.Linq.Table<statics_item> statics_item
		{
			get
			{
				return this.GetTable<statics_item>();
			}
		}
		
		public System.Data.Linq.Table<statics_visit> statics_visit
		{
			get
			{
				return this.GetTable<statics_visit>();
			}
		}
		
		public System.Data.Linq.Table<stdprof> stdprof
		{
			get
			{
				return this.GetTable<stdprof>();
			}
		}
		
		public System.Data.Linq.Table<test> test
		{
			get
			{
				return this.GetTable<test>();
			}
		}
		
		public System.Data.Linq.Table<test_sub> test_sub
		{
			get
			{
				return this.GetTable<test_sub>();
			}
		}
		
		public System.Data.Linq.Table<user> user
		{
			get
			{
				return this.GetTable<user>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.board")]
	public partial class board : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private string _text;
		
		private EntitySet<post> _post;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    #endregion
		
		public board()
		{
			this._post = new EntitySet<post>(new Action<post>(this.attach_post), new Action<post>(this.detach_post));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="NVarChar(MAX)")]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="board_post", Storage="_post", ThisKey="id", OtherKey="board_id")]
		public EntitySet<post> post
		{
			get
			{
				return this._post;
			}
			set
			{
				this._post.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_post(post entity)
		{
			this.SendPropertyChanging();
			entity.board = this;
		}
		
		private void detach_post(post entity)
		{
			this.SendPropertyChanging();
			entity.board = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.user_msg")]
	public partial class user_msg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _user_id;
		
		private string _content;
		
		private System.Nullable<System.DateTime> _time;
		
		private System.Nullable<int> _from_user_id;
		
		private EntityRef<user> _user;
		
		private EntityRef<user> _user1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OntimeChanging(System.Nullable<System.DateTime> value);
    partial void OntimeChanged();
    partial void Onfrom_user_idChanging(System.Nullable<int> value);
    partial void Onfrom_user_idChanged();
    #endregion
		
		public user_msg()
		{
			this._user = default(EntityRef<user>);
			this._user1 = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(MAX)")]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_from_user_id", DbType="Int")]
		public System.Nullable<int> from_user_id
		{
			get
			{
				return this._from_user_id;
			}
			set
			{
				if ((this._from_user_id != value))
				{
					if (this._user1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfrom_user_idChanging(value);
					this.SendPropertyChanging();
					this._from_user_id = value;
					this.SendPropertyChanged("from_user_id");
					this.Onfrom_user_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_msg", Storage="_user", ThisKey="user_id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.user_msg.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.user_msg.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_msg1", Storage="_user1", ThisKey="from_user_id", OtherKey="id", IsForeignKey=true)]
		public user user1
		{
			get
			{
				return this._user1.Entity;
			}
			set
			{
				user previousValue = this._user1.Entity;
				if (((previousValue != value) 
							|| (this._user1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user1.Entity = null;
						previousValue.user_msg1.Remove(this);
					}
					this._user1.Entity = value;
					if ((value != null))
					{
						value.user_msg1.Add(this);
						this._from_user_id = value.id;
					}
					else
					{
						this._from_user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("user1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.chat_logon")]
	public partial class chat_logon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _lastaccesstime;
		
		private System.Nullable<int> _user_id;
		
		private EntitySet<chat_msg> _chat_msg;
		
		private EntityRef<user> _user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnlastaccesstimeChanging(System.Nullable<System.DateTime> value);
    partial void OnlastaccesstimeChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    #endregion
		
		public chat_logon()
		{
			this._chat_msg = new EntitySet<chat_msg>(new Action<chat_msg>(this.attach_chat_msg), new Action<chat_msg>(this.detach_chat_msg));
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastaccesstime", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastaccesstime
		{
			get
			{
				return this._lastaccesstime;
			}
			set
			{
				if ((this._lastaccesstime != value))
				{
					this.OnlastaccesstimeChanging(value);
					this.SendPropertyChanging();
					this._lastaccesstime = value;
					this.SendPropertyChanged("lastaccesstime");
					this.OnlastaccesstimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="chat_logon_chat_msg", Storage="_chat_msg", ThisKey="id", OtherKey="logon_id")]
		public EntitySet<chat_msg> chat_msg
		{
			get
			{
				return this._chat_msg;
			}
			set
			{
				this._chat_msg.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_chat_logon", Storage="_user", ThisKey="user_id", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.chat_logon.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.chat_logon.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_chat_msg(chat_msg entity)
		{
			this.SendPropertyChanging();
			entity.chat_logon = this;
		}
		
		private void detach_chat_msg(chat_msg entity)
		{
			this.SendPropertyChanging();
			entity.chat_logon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.chat_msg")]
	public partial class chat_msg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _logon_id;
		
		private string _content;
		
		private EntityRef<chat_logon> _chat_logon;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onlogon_idChanging(System.Nullable<int> value);
    partial void Onlogon_idChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    #endregion
		
		public chat_msg()
		{
			this._chat_logon = default(EntityRef<chat_logon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logon_id", DbType="Int")]
		public System.Nullable<int> logon_id
		{
			get
			{
				return this._logon_id;
			}
			set
			{
				if ((this._logon_id != value))
				{
					if (this._chat_logon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlogon_idChanging(value);
					this.SendPropertyChanging();
					this._logon_id = value;
					this.SendPropertyChanged("logon_id");
					this.Onlogon_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(MAX)")]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="chat_logon_chat_msg", Storage="_chat_logon", ThisKey="logon_id", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public chat_logon chat_logon
		{
			get
			{
				return this._chat_logon.Entity;
			}
			set
			{
				chat_logon previousValue = this._chat_logon.Entity;
				if (((previousValue != value) 
							|| (this._chat_logon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._chat_logon.Entity = null;
						previousValue.chat_msg.Remove(this);
					}
					this._chat_logon.Entity = value;
					if ((value != null))
					{
						value.chat_msg.Add(this);
						this._logon_id = value.id;
					}
					else
					{
						this._logon_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("chat_logon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.class")]
	public partial class @class : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<coursework> _coursework;
		
		private EntitySet<stdprof> _stdprof;
		
		private EntitySet<user> _user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public @class()
		{
			this._coursework = new EntitySet<coursework>(new Action<coursework>(this.attach_coursework), new Action<coursework>(this.detach_coursework));
			this._stdprof = new EntitySet<stdprof>(new Action<stdprof>(this.attach_stdprof), new Action<stdprof>(this.detach_stdprof));
			this._user = new EntitySet<user>(new Action<user>(this.attach_user), new Action<user>(this.detach_user));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="class_coursework", Storage="_coursework", ThisKey="id", OtherKey="class_id")]
		public EntitySet<coursework> coursework
		{
			get
			{
				return this._coursework;
			}
			set
			{
				this._coursework.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="class_stdprof", Storage="_stdprof", ThisKey="id", OtherKey="class_id")]
		public EntitySet<stdprof> stdprof
		{
			get
			{
				return this._stdprof;
			}
			set
			{
				this._stdprof.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="class_user", Storage="_user", ThisKey="id", OtherKey="class_id")]
		public EntitySet<user> user
		{
			get
			{
				return this._user;
			}
			set
			{
				this._user.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_coursework(coursework entity)
		{
			this.SendPropertyChanging();
			entity.@class = this;
		}
		
		private void detach_coursework(coursework entity)
		{
			this.SendPropertyChanging();
			entity.@class = null;
		}
		
		private void attach_stdprof(stdprof entity)
		{
			this.SendPropertyChanging();
			entity.@class = this;
		}
		
		private void detach_stdprof(stdprof entity)
		{
			this.SendPropertyChanging();
			entity.@class = null;
		}
		
		private void attach_user(user entity)
		{
			this.SendPropertyChanging();
			entity.@class = this;
		}
		
		private void detach_user(user entity)
		{
			this.SendPropertyChanging();
			entity.@class = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.coursework")]
	public partial class coursework : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _content;
		
		private System.Nullable<System.DateTime> _time;
		
		private System.Nullable<int> _class_id;
		
		private string _title;
		
		private string _uploadext;
		
		private EntitySet<coursework_submission> _coursework_submission;
		
		private EntityRef<@class> _class;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OntimeChanging(System.Nullable<System.DateTime> value);
    partial void OntimeChanged();
    partial void Onclass_idChanging(System.Nullable<int> value);
    partial void Onclass_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnuploadextChanging(string value);
    partial void OnuploadextChanged();
    #endregion
		
		public coursework()
		{
			this._coursework_submission = new EntitySet<coursework_submission>(new Action<coursework_submission>(this.attach_coursework_submission), new Action<coursework_submission>(this.detach_coursework_submission));
			this._class = default(EntityRef<@class>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(MAX)")]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_class_id", DbType="Int")]
		public System.Nullable<int> class_id
		{
			get
			{
				return this._class_id;
			}
			set
			{
				if ((this._class_id != value))
				{
					if (this._class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onclass_idChanging(value);
					this.SendPropertyChanging();
					this._class_id = value;
					this.SendPropertyChanged("class_id");
					this.Onclass_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uploadext", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string uploadext
		{
			get
			{
				return this._uploadext;
			}
			set
			{
				if ((this._uploadext != value))
				{
					this.OnuploadextChanging(value);
					this.SendPropertyChanging();
					this._uploadext = value;
					this.SendPropertyChanged("uploadext");
					this.OnuploadextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="coursework_coursework_submission", Storage="_coursework_submission", ThisKey="id", OtherKey="coursework_id")]
		public EntitySet<coursework_submission> coursework_submission
		{
			get
			{
				return this._coursework_submission;
			}
			set
			{
				this._coursework_submission.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="class_coursework", Storage="_class", ThisKey="class_id", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public @class @class
		{
			get
			{
				return this._class.Entity;
			}
			set
			{
				@class previousValue = this._class.Entity;
				if (((previousValue != value) 
							|| (this._class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._class.Entity = null;
						previousValue.coursework.Remove(this);
					}
					this._class.Entity = value;
					if ((value != null))
					{
						value.coursework.Add(this);
						this._class_id = value.id;
					}
					else
					{
						this._class_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("@class");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_coursework_submission(coursework_submission entity)
		{
			this.SendPropertyChanging();
			entity.coursework = this;
		}
		
		private void detach_coursework_submission(coursework_submission entity)
		{
			this.SendPropertyChanging();
			entity.coursework = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.coursework_submission")]
	public partial class coursework_submission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _user_id;
		
		private string _content;
		
		private string _review;
		
		private System.Nullable<int> _coursework_id;
		
		private EntityRef<coursework> _coursework;
		
		private EntityRef<user> _user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OnreviewChanging(string value);
    partial void OnreviewChanged();
    partial void Oncoursework_idChanging(System.Nullable<int> value);
    partial void Oncoursework_idChanged();
    #endregion
		
		public coursework_submission()
		{
			this._coursework = default(EntityRef<coursework>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(MAX)")]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_review", DbType="NVarChar(MAX)")]
		public string review
		{
			get
			{
				return this._review;
			}
			set
			{
				if ((this._review != value))
				{
					this.OnreviewChanging(value);
					this.SendPropertyChanging();
					this._review = value;
					this.SendPropertyChanged("review");
					this.OnreviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coursework_id", DbType="Int")]
		public System.Nullable<int> coursework_id
		{
			get
			{
				return this._coursework_id;
			}
			set
			{
				if ((this._coursework_id != value))
				{
					if (this._coursework.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncoursework_idChanging(value);
					this.SendPropertyChanging();
					this._coursework_id = value;
					this.SendPropertyChanged("coursework_id");
					this.Oncoursework_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="coursework_coursework_submission", Storage="_coursework", ThisKey="coursework_id", OtherKey="id", IsForeignKey=true)]
		public coursework coursework
		{
			get
			{
				return this._coursework.Entity;
			}
			set
			{
				coursework previousValue = this._coursework.Entity;
				if (((previousValue != value) 
							|| (this._coursework.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._coursework.Entity = null;
						previousValue.coursework_submission.Remove(this);
					}
					this._coursework.Entity = value;
					if ((value != null))
					{
						value.coursework_submission.Add(this);
						this._coursework_id = value.id;
					}
					else
					{
						this._coursework_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("coursework");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_coursework_submission", Storage="_user", ThisKey="user_id", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.coursework_submission.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.coursework_submission.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.fav")]
	public partial class fav : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _post_id;
		
		private System.Nullable<int> _user_id;
		
		private EntityRef<post> _post;
		
		private EntityRef<user> _user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpost_idChanging(System.Nullable<int> value);
    partial void Onpost_idChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    #endregion
		
		public fav()
		{
			this._post = default(EntityRef<post>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_id", DbType="Int")]
		public System.Nullable<int> post_id
		{
			get
			{
				return this._post_id;
			}
			set
			{
				if ((this._post_id != value))
				{
					if (this._post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpost_idChanging(value);
					this.SendPropertyChanging();
					this._post_id = value;
					this.SendPropertyChanged("post_id");
					this.Onpost_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="post_fav", Storage="_post", ThisKey="post_id", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public post post
		{
			get
			{
				return this._post.Entity;
			}
			set
			{
				post previousValue = this._post.Entity;
				if (((previousValue != value) 
							|| (this._post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._post.Entity = null;
						previousValue.fav.Remove(this);
					}
					this._post.Entity = value;
					if ((value != null))
					{
						value.fav.Add(this);
						this._post_id = value.id;
					}
					else
					{
						this._post_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_fav", Storage="_user", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.fav.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.fav.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.module_article")]
	public partial class module_article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private string _content;
		
		private bool _show;
		
		private string _sort;
		
		private EntitySet<module_deploy> _module_deploy;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OnshowChanging(bool value);
    partial void OnshowChanged();
    partial void OnsortChanging(string value);
    partial void OnsortChanged();
    #endregion
		
		public module_article()
		{
			this._module_deploy = new EntitySet<module_deploy>(new Action<module_deploy>(this.attach_module_deploy), new Action<module_deploy>(this.detach_module_deploy));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(MAX)")]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_show", DbType="Bit NOT NULL")]
		public bool show
		{
			get
			{
				return this._show;
			}
			set
			{
				if ((this._show != value))
				{
					this.OnshowChanging(value);
					this.SendPropertyChanging();
					this._show = value;
					this.SendPropertyChanged("show");
					this.OnshowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort", DbType="NVarChar(50)")]
		public string sort
		{
			get
			{
				return this._sort;
			}
			set
			{
				if ((this._sort != value))
				{
					this.OnsortChanging(value);
					this.SendPropertyChanging();
					this._sort = value;
					this.SendPropertyChanged("sort");
					this.OnsortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="module_article_module_deploy", Storage="_module_deploy", ThisKey="id", OtherKey="article_id")]
		public EntitySet<module_deploy> module_deploy
		{
			get
			{
				return this._module_deploy;
			}
			set
			{
				this._module_deploy.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_module_deploy(module_deploy entity)
		{
			this.SendPropertyChanging();
			entity.module_article = this;
		}
		
		private void detach_module_deploy(module_deploy entity)
		{
			this.SendPropertyChanging();
			entity.module_article = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.module_deploy")]
	public partial class module_deploy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _article_id;
		
		private System.Nullable<int> _location_id;
		
		private EntityRef<module_article> _module_article;
		
		private EntityRef<module_location> _module_location;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onarticle_idChanging(System.Nullable<int> value);
    partial void Onarticle_idChanged();
    partial void Onlocation_idChanging(System.Nullable<int> value);
    partial void Onlocation_idChanged();
    #endregion
		
		public module_deploy()
		{
			this._module_article = default(EntityRef<module_article>);
			this._module_location = default(EntityRef<module_location>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_article_id", DbType="Int")]
		public System.Nullable<int> article_id
		{
			get
			{
				return this._article_id;
			}
			set
			{
				if ((this._article_id != value))
				{
					if (this._module_article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onarticle_idChanging(value);
					this.SendPropertyChanging();
					this._article_id = value;
					this.SendPropertyChanged("article_id");
					this.Onarticle_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_id", DbType="Int")]
		public System.Nullable<int> location_id
		{
			get
			{
				return this._location_id;
			}
			set
			{
				if ((this._location_id != value))
				{
					if (this._module_location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlocation_idChanging(value);
					this.SendPropertyChanging();
					this._location_id = value;
					this.SendPropertyChanged("location_id");
					this.Onlocation_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="module_article_module_deploy", Storage="_module_article", ThisKey="article_id", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public module_article module_article
		{
			get
			{
				return this._module_article.Entity;
			}
			set
			{
				module_article previousValue = this._module_article.Entity;
				if (((previousValue != value) 
							|| (this._module_article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._module_article.Entity = null;
						previousValue.module_deploy.Remove(this);
					}
					this._module_article.Entity = value;
					if ((value != null))
					{
						value.module_deploy.Add(this);
						this._article_id = value.id;
					}
					else
					{
						this._article_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("module_article");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="module_location_module_deploy", Storage="_module_location", ThisKey="location_id", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public module_location module_location
		{
			get
			{
				return this._module_location.Entity;
			}
			set
			{
				module_location previousValue = this._module_location.Entity;
				if (((previousValue != value) 
							|| (this._module_location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._module_location.Entity = null;
						previousValue.module_deploy.Remove(this);
					}
					this._module_location.Entity = value;
					if ((value != null))
					{
						value.module_deploy.Add(this);
						this._location_id = value.id;
					}
					else
					{
						this._location_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("module_location");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.module_location")]
	public partial class module_location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _path;
		
		private EntitySet<module_deploy> _module_deploy;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpathChanging(string value);
    partial void OnpathChanged();
    #endregion
		
		public module_location()
		{
			this._module_deploy = new EntitySet<module_deploy>(new Action<module_deploy>(this.attach_module_deploy), new Action<module_deploy>(this.detach_module_deploy));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_path", DbType="NVarChar(MAX)")]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((this._path != value))
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="module_location_module_deploy", Storage="_module_deploy", ThisKey="id", OtherKey="location_id")]
		public EntitySet<module_deploy> module_deploy
		{
			get
			{
				return this._module_deploy;
			}
			set
			{
				this._module_deploy.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_module_deploy(module_deploy entity)
		{
			this.SendPropertyChanging();
			entity.module_location = this;
		}
		
		private void detach_module_deploy(module_deploy entity)
		{
			this.SendPropertyChanging();
			entity.module_location = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.module_spec")]
	public partial class module_spec : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _content;
		
		private string _title;
		
		private string _ident;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnidentChanging(string value);
    partial void OnidentChanged();
    #endregion
		
		public module_spec()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(MAX)")]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ident", DbType="NVarChar(50)")]
		public string ident
		{
			get
			{
				return this._ident;
			}
			set
			{
				if ((this._ident != value))
				{
					this.OnidentChanging(value);
					this.SendPropertyChanging();
					this._ident = value;
					this.SendPropertyChanged("ident");
					this.OnidentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.msg_error")]
	public partial class msg_error : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _time;
		
		private string _content;
		
		private string _rawurl;
		
		private string _ip;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntimeChanging(System.Nullable<System.DateTime> value);
    partial void OntimeChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OnrawurlChanging(string value);
    partial void OnrawurlChanged();
    partial void OnipChanging(string value);
    partial void OnipChanged();
    #endregion
		
		public msg_error()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(MAX)")]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rawurl", DbType="NVarChar(MAX)")]
		public string rawurl
		{
			get
			{
				return this._rawurl;
			}
			set
			{
				if ((this._rawurl != value))
				{
					this.OnrawurlChanging(value);
					this.SendPropertyChanging();
					this._rawurl = value;
					this.SendPropertyChanged("rawurl");
					this.OnrawurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ip", DbType="NVarChar(50)")]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if ((this._ip != value))
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.msg_mails")]
	public partial class msg_mails : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _type;
		
		private string _email;
		
		private string _title;
		
		private string _subject;
		
		private System.Nullable<System.DateTime> _time;
		
		private System.Nullable<int> _user_id;
		
		private EntityRef<user> _user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OntimeChanging(System.Nullable<System.DateTime> value);
    partial void OntimeChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    #endregion
		
		public msg_mails()
		{
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(50)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(MAX)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(MAX)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="NVarChar(MAX)")]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_msg_mails", Storage="_user", ThisKey="user_id", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.msg_mails.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.msg_mails.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.post")]
	public partial class post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _board_id;
		
		private string _title;
		
		private System.Nullable<System.DateTime> _time;
		
		private string _text;
		
		private System.Nullable<int> _uid;
		
		private EntitySet<fav> _fav;
		
		private EntitySet<reply> _reply;
		
		private EntityRef<board> _board;
		
		private EntityRef<user> _user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onboard_idChanging(System.Nullable<int> value);
    partial void Onboard_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OntimeChanging(System.Nullable<System.DateTime> value);
    partial void OntimeChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OnuidChanging(System.Nullable<int> value);
    partial void OnuidChanged();
    #endregion
		
		public post()
		{
			this._fav = new EntitySet<fav>(new Action<fav>(this.attach_fav), new Action<fav>(this.detach_fav));
			this._reply = new EntitySet<reply>(new Action<reply>(this.attach_reply), new Action<reply>(this.detach_reply));
			this._board = default(EntityRef<board>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_board_id", DbType="Int")]
		public System.Nullable<int> board_id
		{
			get
			{
				return this._board_id;
			}
			set
			{
				if ((this._board_id != value))
				{
					if (this._board.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onboard_idChanging(value);
					this.SendPropertyChanging();
					this._board_id = value;
					this.SendPropertyChanged("board_id");
					this.Onboard_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="NVarChar(MAX)")]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="Int")]
		public System.Nullable<int> uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="post_fav", Storage="_fav", ThisKey="id", OtherKey="post_id")]
		public EntitySet<fav> fav
		{
			get
			{
				return this._fav;
			}
			set
			{
				this._fav.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="post_reply", Storage="_reply", ThisKey="id", OtherKey="post_id")]
		public EntitySet<reply> reply
		{
			get
			{
				return this._reply;
			}
			set
			{
				this._reply.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="board_post", Storage="_board", ThisKey="board_id", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public board board
		{
			get
			{
				return this._board.Entity;
			}
			set
			{
				board previousValue = this._board.Entity;
				if (((previousValue != value) 
							|| (this._board.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._board.Entity = null;
						previousValue.post.Remove(this);
					}
					this._board.Entity = value;
					if ((value != null))
					{
						value.post.Add(this);
						this._board_id = value.id;
					}
					else
					{
						this._board_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("board");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_post", Storage="_user", ThisKey="uid", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.post.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.post.Add(this);
						this._uid = value.id;
					}
					else
					{
						this._uid = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_fav(fav entity)
		{
			this.SendPropertyChanging();
			entity.post = this;
		}
		
		private void detach_fav(fav entity)
		{
			this.SendPropertyChanging();
			entity.post = null;
		}
		
		private void attach_reply(reply entity)
		{
			this.SendPropertyChanging();
			entity.post = this;
		}
		
		private void detach_reply(reply entity)
		{
			this.SendPropertyChanging();
			entity.post = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.reply")]
	public partial class reply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _post_id;
		
		private string _text;
		
		private System.Nullable<System.DateTime> _time;
		
		private System.Nullable<int> _uid;
		
		private EntityRef<post> _post;
		
		private EntityRef<user> _user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpost_idChanging(System.Nullable<int> value);
    partial void Onpost_idChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OntimeChanging(System.Nullable<System.DateTime> value);
    partial void OntimeChanged();
    partial void OnuidChanging(System.Nullable<int> value);
    partial void OnuidChanged();
    #endregion
		
		public reply()
		{
			this._post = default(EntityRef<post>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_id", DbType="Int")]
		public System.Nullable<int> post_id
		{
			get
			{
				return this._post_id;
			}
			set
			{
				if ((this._post_id != value))
				{
					if (this._post.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpost_idChanging(value);
					this.SendPropertyChanging();
					this._post_id = value;
					this.SendPropertyChanged("post_id");
					this.Onpost_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="NVarChar(MAX)")]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="Int")]
		public System.Nullable<int> uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="post_reply", Storage="_post", ThisKey="post_id", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public post post
		{
			get
			{
				return this._post.Entity;
			}
			set
			{
				post previousValue = this._post.Entity;
				if (((previousValue != value) 
							|| (this._post.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._post.Entity = null;
						previousValue.reply.Remove(this);
					}
					this._post.Entity = value;
					if ((value != null))
					{
						value.reply.Add(this);
						this._post_id = value.id;
					}
					else
					{
						this._post_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("post");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_reply", Storage="_user", ThisKey="uid", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.reply.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.reply.Add(this);
						this._uid = value.id;
					}
					else
					{
						this._uid = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.statics_item")]
	public partial class statics_item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _path;
		
		private string _name;
		
		private EntitySet<statics_visit> _statics_visit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnpathChanging(string value);
    partial void OnpathChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public statics_item()
		{
			this._statics_visit = new EntitySet<statics_visit>(new Action<statics_visit>(this.attach_statics_visit), new Action<statics_visit>(this.detach_statics_visit));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_path", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((this._path != value))
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="statics_item_statics_visit", Storage="_statics_visit", ThisKey="id", OtherKey="item_id")]
		public EntitySet<statics_visit> statics_visit
		{
			get
			{
				return this._statics_visit;
			}
			set
			{
				this._statics_visit.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_statics_visit(statics_visit entity)
		{
			this.SendPropertyChanging();
			entity.statics_item = this;
		}
		
		private void detach_statics_visit(statics_visit entity)
		{
			this.SendPropertyChanging();
			entity.statics_item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.statics_visit")]
	public partial class statics_visit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _user_id;
		
		private System.Nullable<int> _item_id;
		
		private EntityRef<statics_item> _statics_item;
		
		private EntityRef<user> _user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void Onitem_idChanging(System.Nullable<int> value);
    partial void Onitem_idChanged();
    #endregion
		
		public statics_visit()
		{
			this._statics_item = default(EntityRef<statics_item>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item_id", DbType="Int")]
		public System.Nullable<int> item_id
		{
			get
			{
				return this._item_id;
			}
			set
			{
				if ((this._item_id != value))
				{
					if (this._statics_item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onitem_idChanging(value);
					this.SendPropertyChanging();
					this._item_id = value;
					this.SendPropertyChanged("item_id");
					this.Onitem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="statics_item_statics_visit", Storage="_statics_item", ThisKey="item_id", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public statics_item statics_item
		{
			get
			{
				return this._statics_item.Entity;
			}
			set
			{
				statics_item previousValue = this._statics_item.Entity;
				if (((previousValue != value) 
							|| (this._statics_item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._statics_item.Entity = null;
						previousValue.statics_visit.Remove(this);
					}
					this._statics_item.Entity = value;
					if ((value != null))
					{
						value.statics_visit.Add(this);
						this._item_id = value.id;
					}
					else
					{
						this._item_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("statics_item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_statics_visit", Storage="_user", ThisKey="user_id", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.statics_visit.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.statics_visit.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.stdprof")]
	public partial class stdprof : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _stdno;
		
		private int _class_id;
		
		private EntityRef<@class> _class;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnstdnoChanging(string value);
    partial void OnstdnoChanged();
    partial void Onclass_idChanging(int value);
    partial void Onclass_idChanged();
    #endregion
		
		public stdprof()
		{
			this._class = default(EntityRef<@class>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stdno", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string stdno
		{
			get
			{
				return this._stdno;
			}
			set
			{
				if ((this._stdno != value))
				{
					this.OnstdnoChanging(value);
					this.SendPropertyChanging();
					this._stdno = value;
					this.SendPropertyChanged("stdno");
					this.OnstdnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_class_id", DbType="Int NOT NULL")]
		public int class_id
		{
			get
			{
				return this._class_id;
			}
			set
			{
				if ((this._class_id != value))
				{
					if (this._class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onclass_idChanging(value);
					this.SendPropertyChanging();
					this._class_id = value;
					this.SendPropertyChanged("class_id");
					this.Onclass_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="class_stdprof", Storage="_class", ThisKey="class_id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public @class @class
		{
			get
			{
				return this._class.Entity;
			}
			set
			{
				@class previousValue = this._class.Entity;
				if (((previousValue != value) 
							|| (this._class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._class.Entity = null;
						previousValue.stdprof.Remove(this);
					}
					this._class.Entity = value;
					if ((value != null))
					{
						value.stdprof.Add(this);
						this._class_id = value.id;
					}
					else
					{
						this._class_id = default(int);
					}
					this.SendPropertyChanged("@class");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.test")]
	public partial class test : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private string _content;
		
		private EntitySet<test_sub> _test_sub;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    #endregion
		
		public test()
		{
			this._test_sub = new EntitySet<test_sub>(new Action<test_sub>(this.attach_test_sub), new Action<test_sub>(this.detach_test_sub));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(MAX)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(MAX)")]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="test_test_sub", Storage="_test_sub", ThisKey="id", OtherKey="test_id")]
		public EntitySet<test_sub> test_sub
		{
			get
			{
				return this._test_sub;
			}
			set
			{
				this._test_sub.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_test_sub(test_sub entity)
		{
			this.SendPropertyChanging();
			entity.test = this;
		}
		
		private void detach_test_sub(test_sub entity)
		{
			this.SendPropertyChanging();
			entity.test = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.test_sub")]
	public partial class test_sub : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _content;
		
		private string _sort;
		
		private System.Nullable<int> _test_id;
		
		private string _options;
		
		private EntityRef<test> _test;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OnsortChanging(string value);
    partial void OnsortChanged();
    partial void Ontest_idChanging(System.Nullable<int> value);
    partial void Ontest_idChanged();
    partial void OnoptionsChanging(string value);
    partial void OnoptionsChanged();
    #endregion
		
		public test_sub()
		{
			this._test = default(EntityRef<test>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(MAX)")]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort", DbType="NVarChar(50)")]
		public string sort
		{
			get
			{
				return this._sort;
			}
			set
			{
				if ((this._sort != value))
				{
					this.OnsortChanging(value);
					this.SendPropertyChanging();
					this._sort = value;
					this.SendPropertyChanged("sort");
					this.OnsortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_test_id", DbType="Int")]
		public System.Nullable<int> test_id
		{
			get
			{
				return this._test_id;
			}
			set
			{
				if ((this._test_id != value))
				{
					if (this._test.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontest_idChanging(value);
					this.SendPropertyChanging();
					this._test_id = value;
					this.SendPropertyChanged("test_id");
					this.Ontest_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_options", DbType="NVarChar(MAX)")]
		public string options
		{
			get
			{
				return this._options;
			}
			set
			{
				if ((this._options != value))
				{
					this.OnoptionsChanging(value);
					this.SendPropertyChanging();
					this._options = value;
					this.SendPropertyChanged("options");
					this.OnoptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="test_test_sub", Storage="_test", ThisKey="test_id", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public test test
		{
			get
			{
				return this._test.Entity;
			}
			set
			{
				test previousValue = this._test.Entity;
				if (((previousValue != value) 
							|| (this._test.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._test.Entity = null;
						previousValue.test_sub.Remove(this);
					}
					this._test.Entity = value;
					if ((value != null))
					{
						value.test_sub.Add(this);
						this._test_id = value.id;
					}
					else
					{
						this._test_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("test");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[user]")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _showname;
		
		private int _class_id;
		
		private string _mail;
		
		private System.DateTime _lastaccesstime;
		
		private int _onlinecount;
		
		private string _aspnetdb_uname;
		
		private string _stno;
		
		private EntitySet<user_msg> _user_msg;
		
		private EntitySet<user_msg> _user_msg1;
		
		private EntitySet<chat_logon> _chat_logon;
		
		private EntitySet<coursework_submission> _coursework_submission;
		
		private EntitySet<fav> _fav;
		
		private EntitySet<msg_mails> _msg_mails;
		
		private EntitySet<post> _post;
		
		private EntitySet<reply> _reply;
		
		private EntitySet<statics_visit> _statics_visit;
		
		private EntityRef<@class> _class;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnshownameChanging(string value);
    partial void OnshownameChanged();
    partial void Onclass_idChanging(int value);
    partial void Onclass_idChanged();
    partial void OnmailChanging(string value);
    partial void OnmailChanged();
    partial void OnlastaccesstimeChanging(System.DateTime value);
    partial void OnlastaccesstimeChanged();
    partial void OnonlinecountChanging(int value);
    partial void OnonlinecountChanged();
    partial void Onaspnetdb_unameChanging(string value);
    partial void Onaspnetdb_unameChanged();
    partial void OnstnoChanging(string value);
    partial void OnstnoChanged();
    #endregion
		
		public user()
		{
			this._user_msg = new EntitySet<user_msg>(new Action<user_msg>(this.attach_user_msg), new Action<user_msg>(this.detach_user_msg));
			this._user_msg1 = new EntitySet<user_msg>(new Action<user_msg>(this.attach_user_msg1), new Action<user_msg>(this.detach_user_msg1));
			this._chat_logon = new EntitySet<chat_logon>(new Action<chat_logon>(this.attach_chat_logon), new Action<chat_logon>(this.detach_chat_logon));
			this._coursework_submission = new EntitySet<coursework_submission>(new Action<coursework_submission>(this.attach_coursework_submission), new Action<coursework_submission>(this.detach_coursework_submission));
			this._fav = new EntitySet<fav>(new Action<fav>(this.attach_fav), new Action<fav>(this.detach_fav));
			this._msg_mails = new EntitySet<msg_mails>(new Action<msg_mails>(this.attach_msg_mails), new Action<msg_mails>(this.detach_msg_mails));
			this._post = new EntitySet<post>(new Action<post>(this.attach_post), new Action<post>(this.detach_post));
			this._reply = new EntitySet<reply>(new Action<reply>(this.attach_reply), new Action<reply>(this.detach_reply));
			this._statics_visit = new EntitySet<statics_visit>(new Action<statics_visit>(this.attach_statics_visit), new Action<statics_visit>(this.detach_statics_visit));
			this._class = default(EntityRef<@class>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_showname", DbType="NVarChar(50)")]
		public string showname
		{
			get
			{
				return this._showname;
			}
			set
			{
				if ((this._showname != value))
				{
					this.OnshownameChanging(value);
					this.SendPropertyChanging();
					this._showname = value;
					this.SendPropertyChanged("showname");
					this.OnshownameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_class_id", DbType="Int NOT NULL")]
		public int class_id
		{
			get
			{
				return this._class_id;
			}
			set
			{
				if ((this._class_id != value))
				{
					if (this._class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onclass_idChanging(value);
					this.SendPropertyChanging();
					this._class_id = value;
					this.SendPropertyChanged("class_id");
					this.Onclass_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mail", DbType="NVarChar(50)")]
		public string mail
		{
			get
			{
				return this._mail;
			}
			set
			{
				if ((this._mail != value))
				{
					this.OnmailChanging(value);
					this.SendPropertyChanging();
					this._mail = value;
					this.SendPropertyChanged("mail");
					this.OnmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastaccesstime", DbType="DateTime NOT NULL")]
		public System.DateTime lastaccesstime
		{
			get
			{
				return this._lastaccesstime;
			}
			set
			{
				if ((this._lastaccesstime != value))
				{
					this.OnlastaccesstimeChanging(value);
					this.SendPropertyChanging();
					this._lastaccesstime = value;
					this.SendPropertyChanged("lastaccesstime");
					this.OnlastaccesstimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_onlinecount", DbType="Int NOT NULL")]
		public int onlinecount
		{
			get
			{
				return this._onlinecount;
			}
			set
			{
				if ((this._onlinecount != value))
				{
					this.OnonlinecountChanging(value);
					this.SendPropertyChanging();
					this._onlinecount = value;
					this.SendPropertyChanged("onlinecount");
					this.OnonlinecountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aspnetdb_uname", DbType="NVarChar(50)")]
		public string aspnetdb_uname
		{
			get
			{
				return this._aspnetdb_uname;
			}
			set
			{
				if ((this._aspnetdb_uname != value))
				{
					this.Onaspnetdb_unameChanging(value);
					this.SendPropertyChanging();
					this._aspnetdb_uname = value;
					this.SendPropertyChanged("aspnetdb_uname");
					this.Onaspnetdb_unameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stno", DbType="NVarChar(50)")]
		public string stno
		{
			get
			{
				return this._stno;
			}
			set
			{
				if ((this._stno != value))
				{
					this.OnstnoChanging(value);
					this.SendPropertyChanging();
					this._stno = value;
					this.SendPropertyChanged("stno");
					this.OnstnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_msg", Storage="_user_msg", ThisKey="id", OtherKey="user_id")]
		public EntitySet<user_msg> user_msg
		{
			get
			{
				return this._user_msg;
			}
			set
			{
				this._user_msg.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user_msg1", Storage="_user_msg1", ThisKey="id", OtherKey="from_user_id")]
		public EntitySet<user_msg> user_msg1
		{
			get
			{
				return this._user_msg1;
			}
			set
			{
				this._user_msg1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_chat_logon", Storage="_chat_logon", ThisKey="id", OtherKey="user_id")]
		public EntitySet<chat_logon> chat_logon
		{
			get
			{
				return this._chat_logon;
			}
			set
			{
				this._chat_logon.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_coursework_submission", Storage="_coursework_submission", ThisKey="id", OtherKey="user_id")]
		public EntitySet<coursework_submission> coursework_submission
		{
			get
			{
				return this._coursework_submission;
			}
			set
			{
				this._coursework_submission.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_fav", Storage="_fav", ThisKey="id", OtherKey="user_id")]
		public EntitySet<fav> fav
		{
			get
			{
				return this._fav;
			}
			set
			{
				this._fav.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_msg_mails", Storage="_msg_mails", ThisKey="id", OtherKey="user_id")]
		public EntitySet<msg_mails> msg_mails
		{
			get
			{
				return this._msg_mails;
			}
			set
			{
				this._msg_mails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_post", Storage="_post", ThisKey="id", OtherKey="uid")]
		public EntitySet<post> post
		{
			get
			{
				return this._post;
			}
			set
			{
				this._post.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_reply", Storage="_reply", ThisKey="id", OtherKey="uid")]
		public EntitySet<reply> reply
		{
			get
			{
				return this._reply;
			}
			set
			{
				this._reply.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_statics_visit", Storage="_statics_visit", ThisKey="id", OtherKey="user_id")]
		public EntitySet<statics_visit> statics_visit
		{
			get
			{
				return this._statics_visit;
			}
			set
			{
				this._statics_visit.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="class_user", Storage="_class", ThisKey="class_id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public @class @class
		{
			get
			{
				return this._class.Entity;
			}
			set
			{
				@class previousValue = this._class.Entity;
				if (((previousValue != value) 
							|| (this._class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._class.Entity = null;
						previousValue.user.Remove(this);
					}
					this._class.Entity = value;
					if ((value != null))
					{
						value.user.Add(this);
						this._class_id = value.id;
					}
					else
					{
						this._class_id = default(int);
					}
					this.SendPropertyChanged("@class");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_user_msg(user_msg entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_user_msg(user_msg entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_user_msg1(user_msg entity)
		{
			this.SendPropertyChanging();
			entity.user1 = this;
		}
		
		private void detach_user_msg1(user_msg entity)
		{
			this.SendPropertyChanging();
			entity.user1 = null;
		}
		
		private void attach_chat_logon(chat_logon entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_chat_logon(chat_logon entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_coursework_submission(coursework_submission entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_coursework_submission(coursework_submission entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_fav(fav entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_fav(fav entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_msg_mails(msg_mails entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_msg_mails(msg_mails entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_post(post entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_post(post entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_reply(reply entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_reply(reply entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_statics_visit(statics_visit entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_statics_visit(statics_visit entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
}
#pragma warning restore 1591
